version: '3.4'

services:
  # L1 Chain
  geth:
    image: ethereum/client-go:v1.10.23
    container_name: nitro-v2-geth
    ports:
      - "127.0.0.1:8545:8545"
      - "127.0.0.1:8551:8551"
      - "127.0.0.1:8546:8546"
      - "127.0.0.1:30303:30303"
    volumes:
      - "./.deployment/local/volumes/l1data:/datadir"
      - "./.deployment/local/volumes/l1keystore:/keystore"
      - "./.deployment/local/volumes/config:/config"
    command:
      - --keystore=/keystore
      - --http
      - --datadir=/datadir
      - --http.addr=0.0.0.0
      - --authrpc.vhosts=*
      - --authrpc.port=8551
      - --authrpc.addr=0.0.0.0
      - --http.vhosts=*
      - --http.api=engine,personal,eth,net,web3,debug
      - --http.corsdomain=*
      - --ws
      - --ws.addr=0.0.0.0
      - --ws.api=personal,eth,net,web3,debug,txpool
      - --allow-insecure-unlock
      - --unlock=0x3f1Eae7D46d88F08fc2F8ed27FCb2AB183EB2d0E
      - --password=/datadir/passphrase
      - --authrpc.jwtsecret=/config/jwt.hex
      - --nodiscover
      - --syncmode=full
      - --dev
      - --dev.period=1
      - --mine
      - --miner.etherbase=0x3f1Eae7D46d88F08fc2F8ed27FCb2AB183EB2d0E
      - --gcmode=archive

  node_builder:
    build:
      context: .
      dockerfile: Dockerfile
      target: nitro-node-dev
    image: nitro-node-local-node
    container_name: nitro-v2-node-builder
    entrypoint: [ ]
    command: [ "echo", "BuildDone" ]

  sequencer:
    image: nitro-node-local-node
    container_name: nitro-v2-sequencer
    ports:
      - "127.0.0.1:8547:8547"
      - "127.0.0.1:8548:8548"
      - "127.0.0.1:9642:9642"
    volumes:
      - "./.deployment/local/volumes/seq-data:/home/user/.arbitrum/local/nitro"
      - "./.deployment/local/volumes/config:/config"
    command: --conf.file /config/sequencer_config.json --node.feed.output.enable --node.feed.output.port 9642 --http.api net,web3,eth,txpool,debug --node.seq-coordinator.my-url ws://sequencer:8548 --graphql.enable --graphql.vhosts * --graphql.corsdomain *
    depends_on:
      - node_builder
      - geth
      - redis

  poster:
    image: nitro-node-local-node
    container_name: nitro-v2-poster
    ports:
      - "127.0.0.1:8147:8547"
      - "127.0.0.1:8148:8548"
    volumes:
      - "./.deployment/local/volumes/poster-data:/home/user/.arbitrum/local/nitro"
      - "./.deployment/local/volumes/l1keystore:/home/user/l1keystore"
      - "./.deployment/local/volumes/config:/config"
    command: --conf.file /config/poster_config.json
    depends_on:
      - node_builder
      - geth
      - redis

  validator:
    image: nitro-node-local-node
    container_name: nitro-v2-validator
    ports:
      - "127.0.0.1:8247:8547"
      - "127.0.0.1:8248:8548"
    volumes:
      - "./.deployment/local/volumes/validator-data:/home/user/.arbitrum/local/nitro"
      - "./.deployment/local/volumes/l1keystore:/home/user/l1keystore"
      - "./.deployment/local/volumes/config:/config"
    command: --conf.file /config/validator_config.json --http.port 8547 --http.api net,web3,arb,debug --ws.port 8548
    depends_on:
      - sequencer

  testnode-scripts:
    build: testnode-scripts/
    container_name: nitro-v2-testnode-scripts
    volumes:
      - "./.deployment/local/volumes/l1keystore:/home/user/l1keystore"
      - "./.deployment/local/volumes/config:/config"
    depends_on:
      - redis

  redis:
    image: redis:6.2.6
    container_name: nitro-v2-redis
    ports:
      - "127.0.0.1:6379:6379"

  postgres:
    image: postgres:13.6
    container_name: nitro-v2-postgres
    restart: always
    command: postgres -c 'max_connections=200'
    environment:
      POSTGRES_PASSWORD: ''
      POSTGRES_USER: 'postgres'
      POSTGRES_HOST_AUTH_METHOD: 'trust'
    volumes:
      - "./.deployment/local/volumes/postgres-data:/var/lib/postgresql/data"
    ports:
      - "127.0.0.1:7432:5432"

  blockscout_l1:
    depends_on:
      - postgres
      - geth
    image: blockscout/blockscout:4.1.7
    container_name: nitro-v2-blockscout-l1
    restart: always
    links:
      - postgres:database
    command: bash -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      - .deployment/local/blockscout-l1.env
    environment:
      ETHEREUM_JSONRPC_VARIANT: 'geth'
      ETHEREUM_JSONRPC_HTTP_URL: http://geth:8545/
      DATABASE_URL: postgresql://postgres:@postgres:5432/blockscout_l1
      ECTO_USE_SSL: 'false'
    ports:
      - "4001:4000"

  blockscout_l2:
    depends_on:
      - postgres
      - sequencer
    build:
      context: blockscout
      dockerfile: docker/Dockerfile
    container_name: nitro-v2-blockscout
    restart: always
    links:
      - postgres:database
    command:
      - /bin/sh
      - -c
      - |
        bin/blockscout eval "Elixir.Explorer.ReleaseTasks.create_and_migrate()"
        node init/install.js postgres 5432
        bin/blockscout start
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      - ./blockscout/nitro.env
    environment:
      ETHEREUM_JSONRPC_VARIANT: 'geth'
      ETHEREUM_JSONRPC_HTTP_URL: http://sequencer:8547/
      INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: "true"
      DATABASE_URL: postgresql://postgres:@postgres:5432/blockscout
      ECTO_USE_SSL: "false"
    ports:
      - "127.0.0.1:4000:4000"
